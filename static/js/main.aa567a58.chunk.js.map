{"version":3,"sources":["store/index.ts","api/api.ts","App.tsx","index.tsx"],"names":["setSortField","sortField","type","getSortedTodos","createSelector","state","todos","visibleTodos","sort","a","b","id","localeCompare","completed","user","username","initialState","store","createStore","action","filter","todo","deleteItem","composeWithDevTools","BASE_URL","TODOS_URL","USERS_URL","getData","Promise","fetch","all","users","json","preparedTodos","preparedUsers","map","find","userId","App","dispatch","useDispatch","useSelector","className","length","onClick","key","title","then","data","Root","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.aa567a58.chunk.js","sourcesContent":["import { createStore, AnyAction } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { createSelector } from 'reselect';\n\nexport const setSortField = (sortField: string) => ({\n  type: 'SET_SORT_FIELD',\n  sortField,\n});\n\nexport const setDeleteItem = (deleteItem: number) => ({\n  type: 'DELETE_ITEM',\n  deleteItem,\n});\n\nexport const setTodos = (todos: Todo[]) => ({\n  type: 'SET_TODOS',\n  todos,\n});\n\nexport const getSortField = (state: RootState) => state.sortField;\nexport const getTodos = (state: RootState) => state.todos;\n\nexport const getSortedTodos = createSelector(\n  [\n    getTodos,\n    getSortField,\n  ],\n  (todos: Todo[], sortField: string) => {\n    const visibleTodos = [...todos];\n\n    switch (sortField) {\n      case 'id':\n        visibleTodos.sort((a, b) => a.id - b.id);\n        break;\n      case 'title':\n        visibleTodos.sort((a, b) => a[sortField].localeCompare(b[sortField]));\n        break;\n      case 'status':\n        visibleTodos.sort((a, b) => +a.completed - +b.completed);\n        break;\n      case 'username':\n        visibleTodos.sort((a: Todo, b: Todo) => {\n          if (a.user && b.user) {\n            return a.user.username.localeCompare(b.user.username);\n          }\n\n          return 0;\n        });\n\n        break;\n      default: break;\n    }\n\n    return visibleTodos;\n  },\n);\n\nexport type RootState = {\n  todos: Todo[];\n  sortField: string;\n};\n\nconst initialState: RootState = {\n  todos: [],\n  sortField: 'id',\n};\n\nconst rootReducer = (state = initialState, action: AnyAction) => {\n  switch (action.type) {\n    case 'SET_SORT_FIELD':\n      return {\n        ...state,\n        sortField: action.sortField,\n      };\n    case 'SET_TODOS':\n      return {\n        ...state,\n        todos: action.todos,\n      };\n    case 'DELETE_ITEM':\n      return {\n        ...state,\n        todos: state.todos.filter(todo => todo.id !== action.deleteItem),\n      };\n    default:\n      return state;\n  }\n};\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(),\n);\n\nexport default store;\n","const BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\nconst TODOS_URL = `${BASE_URL}/todos.json`;\nconst USERS_URL = `${BASE_URL}/users.json`;\n\nexport const getData = async () => {\n  const [todos, users] = await Promise.all([\n    await fetch(`${TODOS_URL}`),\n    await fetch(`${USERS_URL}`),\n  ]);\n\n  const preparedTodos: Todo[] = await todos.json();\n  const preparedUsers: User[] = await users.json();\n\n  return preparedTodos.map(todo => ({\n    ...todo,\n    user: preparedUsers.find(user => todo.userId === user.id),\n  }));\n};\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getData } from './api/api';\n\nimport './App.scss';\n\nimport {\n  getSortedTodos,\n  setDeleteItem,\n  setSortField,\n  setTodos,\n} from './store';\n\nconst App = () => {\n  const dispatch = useDispatch();\n  const visibleTodos = useSelector(getSortedTodos);\n\n  return (\n    <div className=\"App\">\n      {!visibleTodos.length ? (<button type=\"button\" onClick={() => getData().then(data => dispatch(setTodos(data)))}>Load</button>) : (\n        <>\n          <h1>Redux list of todos</h1>\n          <table>\n            <thead>\n              <tr>\n                <th>\n                  <button type=\"button\" onClick={() => dispatch(setSortField('id'))}>\n                    Sort by id\n                  </button>\n                </th>\n                <th>\n                  <button type=\"button\" onClick={() => dispatch(setSortField('username'))}>\n                    Sort by name\n                  </button>\n                </th>\n                <th>\n                  <button type=\"button\" onClick={() => dispatch(setSortField('title'))}>\n                    Sort by title\n                  </button>\n                </th>\n                <th>\n                  <button type=\"button\" onClick={() => dispatch(setSortField('status'))}>\n                    Sort by status\n                  </button>\n                </th>\n                <th>Delete</th>\n              </tr>\n            </thead>\n            <tbody>\n              {visibleTodos.map(todo => (\n                <tr key={todo.id}>\n                  <td>{todo.id}</td>\n                  <td>{todo.user?.username}</td>\n                  <td>{todo.title}</td>\n                  <td>{todo.completed ? 'Completed' : 'Active'}</td>\n                  <td>\n                    <button type=\"button\" onClick={() => dispatch(setDeleteItem(todo.id))}>X</button>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport store from './store';\nimport App from './App';\n\n// Just a convenient component with all the wrappers for the `App`\n// The Router component (if you use it) should be placed inside the Provider\nconst Root = () => (\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>\n);\n\nReactDOM.render(<Root />, document.getElementById('root'));\n"],"sourceRoot":""}